import * as React from 'react';
import { ScrollPercentagePlainChildrenProps, ScrollPercentageProps } from './index';
declare type State = {
    percentage: number;
    inView: boolean;
    entry?: IntersectionObserverEntry;
};
declare type RenderProps = {
    ref: React.RefObject<any> | ((node?: Element | null) => void);
};
/**
 * Monitors scroll, and triggers the children function with updated props
 *
 <ScrollPercentage>
 {({ref, percentage}) => (
   <h1 ref={ref}>{`${percentage}`}</h1>
 )}
 </ScrollPercentage>
 */
export declare class ScrollPercentage extends React.Component<ScrollPercentageProps | ScrollPercentagePlainChildrenProps, State> {
    static displayName: string;
    static defaultProps: {
        threshold: number;
    };
    state: State;
    node?: Element | null;
    monitoring: boolean;
    componentDidUpdate(prevProps: ScrollPercentageProps | ScrollPercentagePlainChildrenProps, prevState: State): void;
    componentWillUnmount(): void;
    monitorScroll(enabled: boolean, target?: Element | Window | null): void;
    handleScroll: () => void;
    handleInView: (inView: boolean, entry: IntersectionObserverEntry) => void;
    handleRenderProps: ({ ref }: RenderProps) => {} | null | undefined;
    render(): JSX.Element;
}
export {};
