{"version":3,"file":"react-scroll-percentage.umd.min.js","sources":["../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/tiny-invariant/dist/tiny-invariant.esm.js","../node_modules/react-intersection-observer/react-intersection-observer.esm.js","../src/utils.ts","../src/ScrollPercentage.tsx","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../src/useScrollPercentage.tsx"],"sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n  if (condition) {\n    return;\n  }\n\n  if (isProduction) {\n    throw new Error(prefix);\n  } else {\n    throw new Error(prefix + \": \" + (message || ''));\n  }\n}\n\nexport default invariant;\n","import { createElement, Component, useRef, useState, useCallback, useDebugValue } from 'react';\nimport invariant from 'tiny-invariant';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar INSTANCE_MAP = new Map();\nvar OBSERVER_MAP = new Map();\nvar ROOT_IDS = new Map();\nvar consecutiveRootId = 0;\n/**\n * Generate a unique ID for the root element\n * @param root\n */\n\nfunction getRootId(root) {\n  if (!root) return '';\n  if (ROOT_IDS.has(root)) return ROOT_IDS.get(root);\n  consecutiveRootId += 1;\n  ROOT_IDS.set(root, consecutiveRootId.toString());\n  return ROOT_IDS.get(root) + '_';\n}\n/**\n * Monitor element, and trigger callback when element becomes inView\n * @param element {HTMLElement}\n * @param callback {Function} Called with inView\n * @param options {Object} InterSection observer options\n * @param options.threshold {Number} Number between 0 and 1, indicating how much of the element should be inView before triggering\n * @param options.root {HTMLElement}\n * @param options.rootMargin {String} The CSS margin to apply to the root element.\n */\n\n\nfunction observe(element, callback, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  // IntersectionObserver needs a threshold to trigger, so set it to 0 if it's not defined.\n  // Modify the options object, since it's used in the onChange handler.\n  if (!options.threshold) options.threshold = 0;\n  var _options = options,\n      root = _options.root,\n      rootMargin = _options.rootMargin,\n      threshold = _options.threshold; // Validate that the element is not being used in another <Observer />\n\n  !!INSTANCE_MAP.has(element) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-intersection-observer: Trying to observe %s, but it's already being observed by another instance.\\nMake sure the `ref` is only used by a single <Observer /> instance.\\n\\n%s\") : invariant(false) : void 0;\n  /* istanbul ignore if */\n\n  if (!element) return; // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  // An observer with the same options can be reused, so lets use this fact\n\n  var observerId = getRootId(root) + (rootMargin ? threshold.toString() + \"_\" + rootMargin : threshold.toString());\n  var observerInstance = OBSERVER_MAP.get(observerId);\n\n  if (!observerInstance) {\n    observerInstance = new IntersectionObserver(onChange, options);\n    /* istanbul ignore else  */\n\n    if (observerId) OBSERVER_MAP.set(observerId, observerInstance);\n  }\n\n  var instance = {\n    callback: callback,\n    element: element,\n    inView: false,\n    observerId: observerId,\n    observer: observerInstance,\n    // Make sure we have the thresholds value. It's undefined on a browser like Chrome 51.\n    thresholds: observerInstance.thresholds || (Array.isArray(threshold) ? threshold : [threshold])\n  };\n  INSTANCE_MAP.set(element, instance);\n  observerInstance.observe(element);\n  return instance;\n}\n/**\n * Stop observing an element. If an element is removed from the DOM or otherwise destroyed,\n * make sure to call this method.\n * @param element {Element}\n */\n\nfunction unobserve(element) {\n  if (!element) return;\n  var instance = INSTANCE_MAP.get(element);\n\n  if (instance) {\n    var observerId = instance.observerId,\n        observer = instance.observer;\n    var root = observer.root;\n    observer.unobserve(element); // Check if we are still observing any elements with the same threshold.\n\n    var itemsLeft = false; // Check if we still have observers configured with the same root.\n\n    var rootObserved = false;\n    /* istanbul ignore else  */\n\n    if (observerId) {\n      INSTANCE_MAP.forEach(function (item, key) {\n        if (key !== element) {\n          if (item.observerId === observerId) {\n            itemsLeft = true;\n            rootObserved = true;\n          }\n\n          if (item.observer.root === root) {\n            rootObserved = true;\n          }\n        }\n      });\n    }\n\n    if (!rootObserved && root) ROOT_IDS[\"delete\"](root);\n\n    if (observer && !itemsLeft) {\n      // No more elements to observe for threshold, disconnect observer\n      observer.disconnect();\n    } // Remove reference to element\n\n\n    INSTANCE_MAP[\"delete\"](element);\n  }\n}\n\nfunction onChange(changes) {\n  changes.forEach(function (intersection) {\n    var isIntersecting = intersection.isIntersecting,\n        intersectionRatio = intersection.intersectionRatio,\n        target = intersection.target;\n    var instance = INSTANCE_MAP.get(target); // Firefox can report a negative intersectionRatio when scrolling.\n\n    /* istanbul ignore else */\n\n    if (instance && intersectionRatio >= 0) {\n      // If threshold is an array, check if any of them intersects. This just triggers the onChange event multiple times.\n      var inView = instance.thresholds.some(function (threshold) {\n        return instance.inView ? intersectionRatio > threshold : intersectionRatio >= threshold;\n      });\n\n      if (isIntersecting !== undefined) {\n        // If isIntersecting is defined, ensure that the element is actually intersecting.\n        // Otherwise it reports a threshold of 0\n        inView = inView && isIntersecting;\n      }\n\n      instance.inView = inView;\n      instance.callback(inView, intersection);\n    }\n  });\n}\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\n * Monitors scroll, and triggers the children function with updated props\n *\n <InView>\n {({inView, ref}) => (\n   <h1 ref={ref}>{`${inView}`}</h1>\n )}\n </InView>\n */\n\n\nvar InView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InView, _React$Component);\n\n  function InView() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      inView: false,\n      entry: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"node\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNode\", function (node) {\n      if (_this.node) unobserve(_this.node);\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (inView, entry) {\n      // Only trigger a state update if inView has changed.\n      // This prevents an unnecessary extra state update during mount, when the element stats outside the viewport\n      if (inView !== _this.state.inView || inView) {\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    });\n\n    return _this;\n  }\n\n  var _proto = InView.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    !this.node ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-intersection-observer: No DOM node found. Make sure you forward \\\"ref\\\" to the root DOM element you want to observe.\") : invariant(false) : void 0;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold) {\n      unobserve(this.node);\n      this.observeNode();\n    }\n\n    if (prevState.inView !== this.state.inView) {\n      if (this.state.inView && this.props.triggerOnce) {\n        unobserve(this.node);\n        this.node = null;\n      }\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.node) {\n      unobserve(this.node);\n      this.node = null;\n    }\n  };\n\n  _proto.observeNode = function observeNode() {\n    if (!this.node) return;\n    var _this$props = this.props,\n        threshold = _this$props.threshold,\n        root = _this$props.root,\n        rootMargin = _this$props.rootMargin;\n    observe(this.node, this.handleChange, {\n      threshold: threshold,\n      root: root,\n      rootMargin: rootMargin\n    });\n  };\n\n  _proto.render = function render() {\n    var _this$state = this.state,\n        inView = _this$state.inView,\n        entry = _this$state.entry;\n\n    if (!isPlainChildren(this.props)) {\n      return this.props.children({\n        inView: inView,\n        entry: entry,\n        ref: this.handleNode\n      });\n    }\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        as = _this$props2.as,\n        tag = _this$props2.tag,\n        triggerOnce = _this$props2.triggerOnce,\n        threshold = _this$props2.threshold,\n        root = _this$props2.root,\n        rootMargin = _this$props2.rootMargin,\n        onChange = _this$props2.onChange,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"children\", \"as\", \"tag\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\"]);\n\n    return createElement(as || tag || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  };\n\n  return InView;\n}(Component);\n\n_defineProperty(InView, \"displayName\", 'InView');\n\n_defineProperty(InView, \"defaultProps\", {\n  threshold: 0,\n  triggerOnce: false\n});\n\n/* eslint-disable react-hooks/exhaustive-deps */\nfunction useInView(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var ref = useRef();\n\n  var _React$useState = useState({\n    inView: false,\n    entry: undefined\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var setRef = useCallback(function (node) {\n    if (ref.current) {\n      unobserve(ref.current);\n    }\n\n    if (node) {\n      observe(node, function (inView, intersection) {\n        setState({\n          inView: inView,\n          entry: intersection\n        });\n\n        if (inView && options.triggerOnce) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve(node);\n        }\n      }, options);\n    } // Store a reference to the node\n\n\n    ref.current = node;\n  }, [options.threshold, options.root, options.rootMargin, options.triggerOnce]);\n  useDebugValue(state.inView);\n  return [setRef, state.inView, state.entry];\n}\n\nexport default InView;\nexport { InView, useInView };\n","export function calculateVerticalPercentage(\n  bounds: ClientRect,\n  threshold: number = 0,\n  root: Window | Element | null | undefined = window,\n) {\n  if (!root) return 0\n  const vh =\n    (root instanceof Element ? root.clientHeight : root.innerHeight) || 0\n  const offset = threshold * bounds.height\n  const percentage =\n    (bounds.bottom - offset) / (vh + bounds.height - offset * 2)\n\n  return 1 - Math.max(0, Math.min(1, percentage))\n}\n\nexport function calculateHorizontalPercentage(\n  bounds: ClientRect,\n  threshold: number = 0,\n  root: Window | Element | null | undefined = window,\n) {\n  if (!root) return 0\n  const vw = (root instanceof Element ? root.clientWidth : root.innerWidth) || 0\n  const offset = threshold * bounds.width\n  const percentage = (bounds.right - offset) / (vw + bounds.width - offset * 2)\n\n  return 1 - Math.max(0, Math.min(1, percentage))\n}\n","import * as React from 'react'\nimport InView from 'react-intersection-observer'\nimport {\n  calculateHorizontalPercentage,\n  calculateVerticalPercentage,\n} from './utils'\nimport {\n  ScrollPercentagePlainChildrenProps,\n  ScrollPercentageProps,\n} from './index'\n\ntype State = {\n  percentage: number\n  inView: boolean\n  entry?: IntersectionObserverEntry\n}\n\ntype RenderProps = {\n  ref: React.RefObject<any> | ((node?: Element | null) => void)\n}\n\nfunction isPlainChildren(\n  props: ScrollPercentageProps | ScrollPercentagePlainChildrenProps,\n): props is ScrollPercentagePlainChildrenProps {\n  return typeof props.children !== 'function'\n}\n\n/**\n * Monitors scroll, and triggers the children function with updated props\n *\n <ScrollPercentage>\n {({ref, percentage}) => (\n   <h1 ref={ref}>{`${percentage}`}</h1>\n )}\n </ScrollPercentage>\n */\nexport class ScrollPercentage extends React.Component<\n  ScrollPercentageProps | ScrollPercentagePlainChildrenProps,\n  State\n> {\n  static displayName = 'ScrollPercentage'\n  static defaultProps = {\n    threshold: 0,\n  }\n\n  state: State = {\n    percentage: 0,\n    inView: false,\n    entry: undefined,\n  }\n\n  node?: Element | null = undefined\n  monitoring: boolean = false\n\n  componentDidUpdate(\n    prevProps: ScrollPercentageProps | ScrollPercentagePlainChildrenProps,\n    prevState: State,\n  ) {\n    if (\n      this.props.onChange &&\n      (prevState.percentage !== this.state.percentage ||\n        prevState.inView !== this.state.inView)\n    ) {\n      this.props.onChange(this.state.percentage, this.state.entry)\n    }\n\n    if (prevProps.root !== this.props.root) {\n      if (this.monitoring) {\n        this.monitorScroll(false, prevProps.root)\n        this.monitorScroll(this.state.inView)\n      }\n    }\n\n    if (prevState.inView !== this.state.inView) {\n      this.monitorScroll(this.state.inView, prevProps.root)\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.monitorScroll(false)\n  }\n\n  monitorScroll(enabled: boolean, target?: Element | Window | null) {\n    const root = target || this.props.root || window\n\n    if (enabled) {\n      if (this.monitoring) return\n      root.addEventListener('scroll', this.handleScroll, { passive: true })\n      root.addEventListener('resize', this.handleScroll)\n      this.handleScroll()\n      this.monitoring = true\n    } else {\n      if (!this.monitoring) return\n      root.removeEventListener('scroll', this.handleScroll)\n      root.removeEventListener('resize', this.handleScroll)\n      this.monitoring = false\n    }\n  }\n\n  handleScroll = () => {\n    if (!this.node) return\n    const bounds = this.node.getBoundingClientRect()\n    const percentage = this.props.horizontal\n      ? calculateHorizontalPercentage(\n          bounds,\n          this.props.threshold,\n          this.props.root,\n        )\n      : calculateVerticalPercentage(\n          bounds,\n          this.props.threshold,\n          this.props.root,\n        )\n    if (percentage !== this.state.percentage) {\n      this.setState({\n        percentage,\n      })\n    }\n  }\n\n  handleInView = (inView: boolean, entry: IntersectionObserverEntry) => {\n    this.node = entry.target\n    this.setState({ entry, inView })\n  }\n\n  handleRenderProps = ({ ref }: RenderProps) => {\n    const { percentage, entry, inView } = this.state\n    if (!isPlainChildren(this.props)) {\n      return this.props.children({\n        percentage,\n        entry,\n        inView,\n        ref,\n      })\n    }\n\n    return null\n  }\n\n  render() {\n    return (\n      <InView onChange={this.handleInView}>\n        {!isPlainChildren(this.props)\n          ? this.handleRenderProps\n          : this.props.children}\n      </InView>\n    )\n  }\n}\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import { useEffect, useState } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { ScrollPercentageHookResponse, ScrollPercentageOptions } from './index'\nimport {\n  calculateVerticalPercentage,\n  calculateHorizontalPercentage,\n} from './utils'\n\n/**\n * Create a hook that reports the percentage an element is scrolled into the viewport.\n * @param options {ScrollPercentageOptions}\n */\nexport function useScrollPercentage(\n  options: ScrollPercentageOptions = {},\n): ScrollPercentageHookResponse {\n  const [ref, inView, entry] = useInView(options)\n  const [percentage, setPercentage] = useState(0)\n  const target = entry && entry.target\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (!target) return\n      const bounds = target.getBoundingClientRect()\n      const percentage = options.horizontal\n        ? calculateHorizontalPercentage(bounds, options.threshold, options.root)\n        : calculateVerticalPercentage(bounds, options.threshold, options.root)\n\n      setPercentage(percentage)\n    }\n\n    if (inView) {\n      const root = options.root || window\n      root.addEventListener('scroll', handleScroll, { passive: true })\n      root.addEventListener('resize', handleScroll)\n\n      return () => {\n        root.removeEventListener('scroll', handleScroll)\n        root.removeEventListener('resize', handleScroll)\n      }\n    }\n\n    // Trigger a scroll update, so we set the initial scroll percentage\n    handleScroll()\n    return\n  }, [inView, options.root, options.horizontal, options.threshold, target])\n\n  return [ref, percentage, entry]\n}\n"],"names":["_assertThisInitialized","self","ReferenceError","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","prefix","invariant","condition","message","Error","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","INSTANCE_MAP","Map","OBSERVER_MAP","ROOT_IDS","consecutiveRootId","observe","element","callback","options","threshold","_options","root","rootMargin","has","observerId","get","set","toString","getRootId","observerInstance","IntersectionObserver","onChange","instance","inView","observer","thresholds","Array","isArray","unobserve","itemsLeft","rootObserved","forEach","item","disconnect","changes","intersection","isIntersecting","intersectionRatio","some","undefined","InView","_React$Component","subClass","superClass","_this","_len","args","_key","concat","entry","node","observeNode","state","setState","props","create","constructor","__proto__","_proto","componentDidMount","componentDidUpdate","prevProps","prevState","triggerOnce","componentWillUnmount","_this$props","handleChange","render","_this$state","children","isPlainChildren","ref","handleNode","_this$props2","as","tag","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","createElement","Component","calculateVerticalPercentage","bounds","window","vh","Element","clientHeight","innerHeight","offset","height","percentage","bottom","Math","max","min","calculateHorizontalPercentage","vw","clientWidth","innerWidth","width","right","ScrollPercentage","getBoundingClientRect","horizontal","monitoring","monitorScroll","enabled","addEventListener","handleScroll","passive","removeEventListener","React.createElement","handleInView","handleRenderProps","React","useRef","_React$useState","useState","setRef","useCallback","current","useDebugValue","useInView","setPercentage","useEffect"],"mappings":"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"}